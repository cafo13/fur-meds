name: build_and_deploy_ios_app

on:
  workflow_run:
    workflows: ["build_web_app"]
    branches: ["main"]
    types:
      - completed

jobs:
  build_and_deploy_ios_app:
    name: Build and deploy ios app
    runs-on: macos-latest
    steps:
      - name: Check out Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download www directory artifacts
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_web_app.yml
          workflow_conclusion: success
          commit: ${{ github.event.workflow_run.head_sha }}
          event: push
          name: www
          name_is_regexp: true
          if_no_artifact_found: fail
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
      - name: Install bundler and fastlane
        working-directory: ./app/ios/App
        run: |
          gem install bundler:2.4.13
          gem install json:2.6.3
          gem install digest-crc:0.6.4
          gem install unf_ext:0.0.8.2
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Decode signing certificate into a file
        run: echo "${{ secrets.IOS_DIST_SIGNING_KEY }}" | base64 -d > ${GITHUB_WORKSPACE}/app/ios/App/signing-cert.p12
      - name: Sync downloaded www directory to ios directory
        working-directory: ./app
        run: |
          mkdir -p ios/App/App/public
          cp -r www/* ios/App/App/public/
      - name: Build and deploy app
        working-directory: ./app/ios/App
        run: bundle exec fastlane ios build_upload_testflight
        env:
          ASC_KEY_ID: ${{ secrets.IOS_ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.IOS_ASC_ISSUER_ID }}
          ASC_KEY: ${{ secrets.IOS_ASC_PRIVATE_KEY }}
          SIGNING_KEY_FILE_PATH: signing-cert.p12
