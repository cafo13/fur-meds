name: android-app

on:
  push:
    branches: ["main"]
    paths:
      - app/**
      - .github/workflows/ios-app.yml
  pull_request:
    branches: ["main"]
    paths:
      - app/**
      - .github/workflows/ios-app.yml

jobs:
  build_and_deploy:
    name: Build and deploy android app
    runs-on: ubuntu-latest
    steps:
      - name: Check out Code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install bundler and fastlane
        working-directory: ./app/android
        run: |
          gem install bundler:2.4.13
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Generate google services json file
        run: echo "${{ secrets.GOOGLE_SERVICES_KEY_FILE }}" | base64 -d > ${GITHUB_WORKSPACE}/app/android/key.json
      - name: Generate keystore jks file
        run: echo "${{ secrets.KEYSTORE_JKS_FILE }}" | base64 -d > ${GITHUB_WORKSPACE}/app/android/keystore.jks
      - id: semver
        name: Git Semantic Version
        uses: PaulHatch/semantic-version@v5.0.3
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
          major_regexp_flags: ""
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
          minor_regexp_flags: ""
          # A string to determine the format of the version output
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          change_path: "backend/pets-api"
          # Named version, will be used as suffix for name version tag
          namespace: pets-api
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: true
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: false
          # The output method used to generate list of users, 'csv' or 'json'.
          user_format_type: "json"
          # Prevents pre-v1.0.0 version from automatically incrementing the major version.
          # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
          enable_prerelease_mode: true
      - name: Build web app and sync to android directory
        working-directory: ./app
        run: |
          npm i -g @angular/cli
          npm ci
          ng build --configuration production
          npx cap sync android
      - name: Install fastlane plugins
        working-directory: ./app/android
        run: bundle exec fastlane install_plugins
      - name: Build and deploy app bundle to play store
        working-directory: ./app/android
        env:
          ANDROID_DEPLOY_TRACK: internal
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_ALIAS_KEY_NAME: ${{ secrets.ANDROID_ALIAS_KEY_NAME }}
          ANDROID_ALIAS_KEY_PASSWORD: ${{ secrets.ANDROID_ALIAS_KEY_PASSWORD }}
        run: bundle exec fastlane deploy version:${{ steps.semver.outputs.version }}
